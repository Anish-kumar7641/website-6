version: 2.1
orbs:
  gcp:
    executors:
      google-cloud:
        docker:
          - image: google/cloud-sdk:latest
    commands:
      auth:
        parameters:
          project_id:
            description: Id of the GCP project.
            type: string
          cluster_name:
            description: Name of the GCP cluster.
            type: string
          compute_zone:
            description: Name of the GCP Compute Zone.
            type: enum
            enum: ["us-east4-c", "us-east4-b", "us-east4-a", "us-east1-b"]
        steps:
          - run:
              name: Set up GCP
              command: |
                echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
                gcloud --quiet auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
                gcloud --quiet config set project << parameters.project_id >>
                gcloud --quiet config set container/cluster << parameters.cluster_name >>
                gcloud --quiet container clusters get-credentials << parameters.cluster_name >> --zone << parameters.compute_zone >>
                gcloud --quiet auth configure-docker
      deploy:
        parameters:
          deployment:
            description: Name of the Kubernetes deployment to update.
            type: string
          container:
            description: Name of the Kubernetes container to update.
            type: string
          image:
            description: Name of the image to deploy.
            type: string
        steps:
          - run:
              kubectl set image deployment/<< parameters.deployment >> << parameters.container >>=<< parameters.image >>

jobs:
  test:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v3-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install less compiler
          command: sudo npm install less@3.0.1 -g
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run frontend tests
          command: npm run build-css && npm test

  build_image:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v3-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node dependencies
          command: npm install
      - save_cache:
          key: v3-dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build app
          command: npm run build
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push docker image
          command: |
            docker build --rm=false -t "keepnetwork/website:$CIRCLE_SHA1" .
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
            docker push "keepnetwork/website:$CIRCLE_SHA1"

  deploy_image:
    executor: gcp/google-cloud
    steps:
      - gcp/auth:
          project_id: cfc-production
          cluster_name: prod-1
          compute_zone: us-east1-b
      - gcp/deploy:
          deployment: keep-website
          container: keep-website
          image: keepnetwork/website:$CIRCLE_SHA1

  slack_guardian_notification:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Notify guardian of config update if needed
          command: bash slack/notify-update.sh
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - build_image
      - deploy_image:
          context: gcp
          filters:
            branches:
              only: master
          requires:
            - build_image
            - test
      - slack_guardian_notification:
          filters:
            branches:
              only: master
