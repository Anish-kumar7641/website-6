import React from 'react';
import PropTypes from 'prop-types';

import agreement from './images/agreement.svg';
import bank from './images/bank.svg';
import castle from './images/castleIcon.svg';
import fingerprint from './images/fingerprint.svg';
import github from './images/GitHub_Logo.svg';
import keyCircle from './images/key-circle.svg';
import moneyShare from './images/money-share.svg';
import networkLock from './images/network-lock.svg';
import paperStudy from './images/paper-study.svg';
import priceTag from './images/price-tag.svg';
import remoteLock from './images/remote-lock.svg';
import safeOpened from './images/safe-opened.svg';
import shop from './images/shop.svg';
import skull from './images/skull.svg';
import slack from './images/slack_monochrome_white.svg';
import sliders from './images/sliders.svg';
import swords from './images/swordsIcon.svg';
import timeline from './images/timeline.svg';
import wallet from './images/wallet.svg';

const Keep = ({ color, height, width }) => (
    <svg height={height} id="svg2" width={width} version="1.1" viewBox="0 0 928.81335 238.16" xmlSpace="preserve">
        <defs id="defs6"/>
        <g id="g10" transform="matrix(1.3333333,0,0,-1.3333333,0,238.16)">
            <g id="g12" transform="scale(0.1)">
                <path id="path14" style={{"fill":color,"fillOpacity":"1","fillRule":"nonzero","stroke":"none"}} d="m 1959.7,1388.16 v 398.07 h 1589.69 v -650.74 h -446.54 v 257.75 h -431.21 v -303.63 h 370.01 V 722.191 H 2671.64 V 392.988 h 438.88 v 290.883 h 446.54 V 0 H 1959.7 v 398.059 h 188.79 V 1388.16 H 1959.7"/>
                <path id="path16" style={{"fill":color,"fillOpacity":"1","fillRule":"nonzero","stroke":"none"}} d="m 3651.49,1388.16 v 398.07 h 1589.7 v -650.74 h -446.55 v 257.75 h -431.21 v -303.63 h 370.01 V 722.191 H 4363.43 V 392.988 h 438.88 v 290.883 h 446.53 V 0 H 3651.49 v 398.059 h 188.79 v 990.101 h -188.79"/>
                <path id="path18" style={{"fill":color,"fillOpacity":"1","fillRule":"nonzero","stroke":"none"}} d="m 6274.66,1005.42 c 73.95,0 102.01,5.08 117.34,20.4 22.98,25.48 28.06,63.79 28.06,173.46 0,109.77 -5.08,147.98 -28.06,173.56 -15.33,15.32 -43.39,20.4 -117.34,20.4 H 6055.23 V 1005.42 Z M 6851.37,724.691 C 6782.41,653.23 6675.23,627.75 6517.09,627.75 H 6055.23 V 398.059 h 201.53 V 0 h -913.47 v 398.059 h 188.78 v 990.101 h -188.78 v 398.07 h 1173.8 c 158.14,0 265.32,-25.57 334.28,-97.02 81.6,-84.2 114.75,-173.46 114.75,-482.27 0,-308.706 -33.15,-398.065 -114.75,-482.249"/>
                <path id="path20" style={{"fill":color,"fillOpacity":"1","fillRule":"nonzero","stroke":"none"}} d="m 1865.26,1388.16 v 398.07 H 964.527 V 1393.24 H 1104.84 L 826.695,1069.21 H 711.949 v 324.03 h 158.133 v 392.99 H 656.352 V 1638.86 H 540.684 v 147.37 H 329.43 V 1638.86 H 213.754 v 147.37 H 0 V 1388.16 H 188.789 V 398.059 L 0,398.059 V 0 H 870.082 V 392.988 H 711.949 V 717.02 H 826.695 L 1104.84,392.988 H 964.527 V 0 h 900.733 v 398.059 h -140.32 l -423.99,495.054 423.99,495.047 h 140.32"/>
            </g>
        </g>
    </svg>
);

Keep.propTypes = {
    color: PropTypes.string,
    height: PropTypes.string,
    width: PropTypes.string
};

Keep.defaultProps = {
    color: '#293330',
    height: '238.16',
    width:'917.41333'
};

const GithubSocial = ({ color, height, width }) => (
    <svg height={height} width={width} preserveAspectRatio="xMidYMid" version="1.1" viewBox="0 0 256 250">
        <g>
            <path d="M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z" fill={color}/>
        </g>
    </svg>
);

GithubSocial.propTypes = {
    color: PropTypes.string,
    height: PropTypes.string,
    width: PropTypes.string
};

GithubSocial.defaultProps = {
    color: '#505E5B',
    height: '24px',
    width:'25px'
};


const LinkedIn = ({ color, height, width }) => (
    <svg height={height} width={width} version="1.1" viewBox="0 0 27 26">
        <defs/>
        <g id="round-3" fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
            <g id="Final" fill={color} transform="translate(-288.000000, -3868.000000)">
                <g id="Group-14" transform="translate(-128.000000, 3247.000000)">
                    <path id="Linkedin" d="M416.341563,647 L422.127062,647 L422.127062,629.456973 L416.341563,629.456973 L416.341563,647 Z M419.235065,627.061917 C421.252842,627.061917 422.507746,625.715835 422.507746,624.031716 C422.473139,622.311217 421.252842,621 419.272682,621 C417.292521,621 416,622.311217 416,624.031716 C416,625.715835 417.254904,627.061917 419.195943,627.061917 L419.235065,627.061917 L419.235065,627.061917 Z M425.332033,647 C425.332033,647 425.408772,631.103195 425.332033,629.458489 L431.120542,629.458489 L431.120542,632.000583 L431.08142,632.000583 C431.842789,630.804571 433.213553,629.046175 436.335767,629.046175 C440.14261,629.046175 443,631.551889 443,636.942281 L443,647 L437.211491,647 L437.211491,637.615322 C437.211491,635.256646 436.373384,633.648321 434.278868,633.648321 C432.680896,633.648321 431.728433,634.73216 431.311636,635.781133 C431.155149,636.15555 431.120542,636.680037 431.120542,637.204524 L431.120542,647 L425.332033,647 L425.332033,647 Z"/>
                </g>
            </g>
        </g>
    </svg>
);

LinkedIn.propTypes = {
    color: PropTypes.string,
    height: PropTypes.string,
    width: PropTypes.string
};

LinkedIn.defaultProps = {
    color: '#505E5B',
    height: '26px',
    width:'27px'
};

const Twitter = ({ color, height, width }) => (
    <svg height={height} width={width} version="1.1" viewBox="0 0 30 24">
        <defs/>
        <g id="round-3" fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
            <g id="Final" fill={color} transform="translate(-246.000000, -3870.000000)">
                <g id="Group-14" transform="translate(-128.000000, 3247.000000)">
                    <path id="Twitter" d="M400.929734,628.977428 C400.940616,629.237582 400.946834,629.499267 400.946834,629.762482 C400.946834,637.769113 394.756555,647 383.436211,647 C379.960203,647 376.725153,645.997641 374,644.279092 C374.481915,644.334184 374.971603,644.36326 375.469064,644.36326 C378.352783,644.36326 381.006426,643.394567 383.112861,641.769368 C380.4188,641.720398 378.146025,639.968182 377.364079,637.56099 C377.738729,637.632915 378.124262,637.671173 378.520676,637.671173 C379.081874,637.671173 379.625972,637.596187 380.142087,637.458458 C377.32677,636.901422 375.206343,634.452911 375.206343,631.517758 L375.206343,631.441242 C376.03648,631.894217 376.984765,632.166614 377.993678,632.19875 C376.34273,631.112223 375.256089,629.257476 375.256089,627.156348 C375.256089,626.045336 375.559229,625.004718 376.089336,624.109482 C379.125402,627.774597 383.660068,630.18791 388.774588,630.440413 C388.670432,629.996621 388.616022,629.534464 388.616022,629.058535 C388.616022,625.713256 391.370712,623 394.770546,623 C396.541196,623 398.140844,623.736084 399.26324,624.91443 C400.665458,624.642033 401.982174,624.138558 403.171417,623.443793 C402.71282,624.857808 401.736553,626.045336 400.464919,626.795192 C401.710125,626.649812 402.896259,626.323854 404,625.841803 C403.174526,627.056877 402.131413,628.12351 400.929734,628.977428"/>
                </g>
            </g>
        </g>
    </svg>
);

Twitter.propTypes = {
    color: PropTypes.string,
    height: PropTypes.string,
    width: PropTypes.string
};

Twitter.defaultProps = {
    color: '#505E5B',
    height: '24px',
    width:'30px'
};

export {
    agreement,
    bank,
    castle,
    fingerprint,
    github,
    GithubSocial,
    Keep,
    keyCircle,
    LinkedIn,
    moneyShare,
    networkLock,
    paperStudy,
    priceTag,
    remoteLock,
    safeOpened,
    shop,
    skull,
    slack,
    sliders,
    swords,
    timeline,
    Twitter,
    wallet
};
